apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
  name: istios.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: Istio
    listKind: IstioList
    plural: istios
    singular: istio
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Istio is the Schema for the istio API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IstioSpec defines the desired state of Istio
            properties:
              controlplane:
                properties:
                  istiod:
                    properties:
                      deployment:
                        description: Deployment enables declarative updates for Pods
                          and ReplicaSets.
                        properties:
                          hpa:
                            description: hpaSpec describes the desired functionality
                              of the HorizontalPodAutoscaler.
                            properties:
                              maxReplicas:
                                description: maxReplicas is the upper limit for the
                                  number of replicas to which the autoscaler can scale
                                  up. It cannot be less that minReplicas.
                                type: integer
                              metrics:
                                description: metrics contains the specifications for
                                  which to use to calculate the desired replica count
                                  (the maximum replica count across all metrics will
                                  be used). The desired replica count is calculated
                                  multiplying the ratio between the target value and
                                  the current value by the current number of pods.
                                  Ergo, metrics used must decrease as the pod count
                                  is increased, and vice-versa. See the individual
                                  metric source types for more information about how
                                  each type of metric must respond. If not set, the
                                  default metric will be set to 80% average CPU utilization.
                                items:
                                  properties:
                                    resource:
                                      description: resource refers to a resource metric
                                        (such as those specified in requests and limits)
                                        known to Kubernetes describing each pod in
                                        the current scale target (e.g. CPU or memory).
                                        Such metrics are built in to Kubernetes, and
                                        have special scaling options on top of those
                                        available to normal per-pod metrics using
                                        the "pods" source.
                                      properties:
                                        name:
                                          description: name is the name of the resource
                                            in question.
                                          type: string
                                        targetAverageUtilization:
                                          description: targetAverageUtilization is
                                            the target value of the average of the
                                            resource metric across all relevant pods,
                                            represented as a percentage of the requested
                                            value of the resource for the pods.
                                          type: integer
                                      type: object
                                    type:
                                      description: type is the type of metric source.  It
                                        should be one of "ContainerResource", "External",
                                        "Object", "Pods" or "Resource", each mapping
                                        to a matching field in the object.
                                      type: string
                                  type: object
                                type: array
                              minReplicas:
                                description: minReplicas is the lower limit for the
                                  number of replicas to which the autoscaler can scale
                                  down. It defaults to 1 pod. minReplicas is allowed
                                  to be 0 if the alpha feature gate HPAScaleToZero
                                  is enabled and at least one Object or External metric
                                  is configured. Scaling is active as long as at least
                                  one metric value is available.
                                minimum: 1
                                type: integer
                            type: object
                          resources:
                            description: Resources describes the compute resource
                              requirements.
                            properties:
                              limits:
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  cpu:
                                    pattern: ^[1-9](\d?)+(m|g)$
                                    type: string
                                  memory:
                                    pattern: ^[1-9](\d?)+(Mi|Gi)$
                                    type: string
                                type: object
                              requests:
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  cpu:
                                    pattern: ^[1-9](\d?)+(m|g)$
                                    type: string
                                  memory:
                                    pattern: ^[1-9](\d?)+(Mi|Gi)$
                                    type: string
                                type: object
                            type: object
                          strategy:
                            description: The deployment strategy to use to replace
                              existing pods with new ones.
                            properties:
                              rollingUpdate:
                                description: Spec to control the desired behavior
                                  of rolling update.
                                properties:
                                  maxSurge:
                                    description: 'The maximum number of pods that
                                      can be scheduled above the desired number of
                                      pods. Value can be an absolute number (ex: 5)
                                      or a percentage of desired pods (ex: 10%). This
                                      can not be 0 if MaxUnavailable is 0. Absolute
                                      number is calculated from percentage by rounding
                                      up. By default, a value of 1 is used. Example:
                                      when this is set to 30%, the new RC can be scaled
                                      up immediately when the rolling update starts,
                                      such that the total number of old and new pods
                                      do not exceed 130% of desired pods. Once old
                                      pods have been killed, new RC can be scaled
                                      up further, ensuring that total number of pods
                                      running at any time during the update is at
                                      most 130% of desired pods.'
                                    pattern: ^[1-9][\d]?%|100%|\d+$
                                    type: string
                                  maxUnavailable:
                                    description: 'The maximum number of pods that
                                      can be unavailable during the update. Value
                                      can be an absolute number (ex: 5) or a percentage
                                      of desired pods (ex: 10%). Absolute number is
                                      calculated from percentage by rounding down.
                                      This can not be 0 if MaxSurge is 0. By default,
                                      a fixed value of 1 is used. Example: when this
                                      is set to 30%, the old RC can be scaled down
                                      to 70% of desired pods immediately when the
                                      rolling update starts. Once new pods are ready,
                                      old RC can be scaled down further, followed
                                      by scaling up the new RC, ensuring that the
                                      total number of pods available at all times
                                      during the update is at least 70% of desired
                                      pods.'
                                    pattern: ^[1-9][\d]?%|100%|\d+$
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  meshConfig:
                    properties:
                      gatewayTopology:
                        description: Mesh configurion.
                        properties:
                          numTrustedProxies:
                            description: Defines the number of trusted proxies deployed
                              in front of the Istio gateway proxy.
                            type: integer
                        type: object
                    type: object
                type: object
              dataplane:
                properties:
                  ingressGateway:
                    properties:
                      deployment:
                        description: Deployment enables declarative updates for Pods
                          and ReplicaSets.
                        properties:
                          hpa:
                            description: hpaSpec describes the desired functionality
                              of the HorizontalPodAutoscaler.
                            properties:
                              maxReplicas:
                                description: maxReplicas is the upper limit for the
                                  number of replicas to which the autoscaler can scale
                                  up. It cannot be less that minReplicas.
                                type: integer
                              metrics:
                                description: metrics contains the specifications for
                                  which to use to calculate the desired replica count
                                  (the maximum replica count across all metrics will
                                  be used). The desired replica count is calculated
                                  multiplying the ratio between the target value and
                                  the current value by the current number of pods.
                                  Ergo, metrics used must decrease as the pod count
                                  is increased, and vice-versa. See the individual
                                  metric source types for more information about how
                                  each type of metric must respond. If not set, the
                                  default metric will be set to 80% average CPU utilization.
                                items:
                                  properties:
                                    resource:
                                      description: resource refers to a resource metric
                                        (such as those specified in requests and limits)
                                        known to Kubernetes describing each pod in
                                        the current scale target (e.g. CPU or memory).
                                        Such metrics are built in to Kubernetes, and
                                        have special scaling options on top of those
                                        available to normal per-pod metrics using
                                        the "pods" source.
                                      properties:
                                        name:
                                          description: name is the name of the resource
                                            in question.
                                          type: string
                                        targetAverageUtilization:
                                          description: targetAverageUtilization is
                                            the target value of the average of the
                                            resource metric across all relevant pods,
                                            represented as a percentage of the requested
                                            value of the resource for the pods.
                                          type: integer
                                      type: object
                                    type:
                                      description: type is the type of metric source.  It
                                        should be one of "ContainerResource", "External",
                                        "Object", "Pods" or "Resource", each mapping
                                        to a matching field in the object.
                                      type: string
                                  type: object
                                type: array
                              minReplicas:
                                description: minReplicas is the lower limit for the
                                  number of replicas to which the autoscaler can scale
                                  down. It defaults to 1 pod. minReplicas is allowed
                                  to be 0 if the alpha feature gate HPAScaleToZero
                                  is enabled and at least one Object or External metric
                                  is configured. Scaling is active as long as at least
                                  one metric value is available.
                                minimum: 1
                                type: integer
                            type: object
                          resources:
                            description: Resources describes the compute resource
                              requirements.
                            properties:
                              limits:
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  cpu:
                                    pattern: ^[1-9](\d?)+(m|g)$
                                    type: string
                                  memory:
                                    pattern: ^[1-9](\d?)+(Mi|Gi)$
                                    type: string
                                type: object
                              requests:
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  cpu:
                                    pattern: ^[1-9](\d?)+(m|g)$
                                    type: string
                                  memory:
                                    pattern: ^[1-9](\d?)+(Mi|Gi)$
                                    type: string
                                type: object
                            type: object
                          strategy:
                            description: The deployment strategy to use to replace
                              existing pods with new ones.
                            properties:
                              rollingUpdate:
                                description: Spec to control the desired behavior
                                  of rolling update.
                                properties:
                                  maxSurge:
                                    description: 'The maximum number of pods that
                                      can be scheduled above the desired number of
                                      pods. Value can be an absolute number (ex: 5)
                                      or a percentage of desired pods (ex: 10%). This
                                      can not be 0 if MaxUnavailable is 0. Absolute
                                      number is calculated from percentage by rounding
                                      up. By default, a value of 1 is used. Example:
                                      when this is set to 30%, the new RC can be scaled
                                      up immediately when the rolling update starts,
                                      such that the total number of old and new pods
                                      do not exceed 130% of desired pods. Once old
                                      pods have been killed, new RC can be scaled
                                      up further, ensuring that total number of pods
                                      running at any time during the update is at
                                      most 130% of desired pods.'
                                    pattern: ^[1-9][\d]?%|100%|\d+$
                                    type: string
                                  maxUnavailable:
                                    description: 'The maximum number of pods that
                                      can be unavailable during the update. Value
                                      can be an absolute number (ex: 5) or a percentage
                                      of desired pods (ex: 10%). Absolute number is
                                      calculated from percentage by rounding down.
                                      This can not be 0 if MaxSurge is 0. By default,
                                      a fixed value of 1 is used. Example: when this
                                      is set to 30%, the old RC can be scaled down
                                      to 70% of desired pods immediately when the
                                      rolling update starts. Once new pods are ready,
                                      old RC can be scaled down further, followed
                                      by scaling up the new RC, ensuring that the
                                      total number of pods available at all times
                                      during the update is at least 70% of desired
                                      pods.'
                                    pattern: ^[1-9][\d]?%|100%|\d+$
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                type: object
              releaseName:
                type: string
            type: object
          status:
            description: Status defines the observed state of CustomObject.
            properties:
              conditions:
                description: Conditions associated with CustomStatus.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State signifies current state of CustomObject. Value
                  can be one of ("Ready", "Processing", "Error", "Deleting").
                enum:
                - Processing
                - Deleting
                - Ready
                - Error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
